{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.33.5",
    "schemaVersion": 1010,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@gby/convers!",
  "docComment": "",
  "name": "@gby/convers",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@gby/convers!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@gby/convers!createMemberExportContentConver:function(1)",
          "docComment": "/**\n * 创建 用于将给对象添加成员的方式改成 成员导出的方式 的内容转换器\n *\n * @param options - 选项\n *\n * @returns 返回一个文件转换器\n *\n * @example\n * ```js\n * createMemberExportContentConver({name:\"Cesium\",prefix:\"export_\"})\n * ```\n *\n * 会将下面的代码\n * ```js\n * Cesium.gby = function(){};\n * ```\n *\n * 修改成\n * ```js\n * const export_gby = function(){};\n * export {export_gby as gby}\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createMemberExportContentConver(options: "
            },
            {
              "kind": "Reference",
              "text": "MemberExportContentConverOptions",
              "canonicalReference": "@gby/convers!MemberExportContentConverOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ContentConver",
              "canonicalReference": "file-conver!ContentConver:type"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/js-conver.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createMemberExportContentConver"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gby/convers!createMemberImportContentConver:function(1)",
          "docComment": "/**\n * 创建 用于将模块成员的使用方式改成 成员导入的使用方式 的内容转换器\n *\n * @param options - 选项\n *\n * @returns 返回一个文件转换器\n *\n * @example\n * ```js\n * createMemberImportContentConver({name:\"Cesium\",path:\"cesium\"})\n * ```\n *\n * 会将下面的代码\n * ```js\n * new Cesium.Cartesian3();\n * ```\n *\n * 修改成\n * ```js\n * import {Cartesian3} from \"cesium\";\n * new Cartesian3();\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createMemberImportContentConver(options: "
            },
            {
              "kind": "Reference",
              "text": "MemberImportContentConverOptions",
              "canonicalReference": "@gby/convers!MemberImportContentConverOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ContentConver",
              "canonicalReference": "file-conver!ContentConver:type"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/js-conver.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createMemberImportContentConver"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gby/convers!createPathImportContentConver:function(1)",
          "docComment": "/**\n * 创建 用于将 直接使用 路径的方式替换成 导入的方式的 内容转换器\n *\n * @param options - \n *\n * @returns \n *\n * @example\n *\n * 可用于如下内容的转换\n * ```js\n * imgDom.src = \"/image/icon.png\"\n * ```\n *\n * 修改成\n * ```js\n * import icon from \"/image/icon.png\";\n * imgDom.src = icon\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createPathImportContentConver(options: "
            },
            {
              "kind": "Reference",
              "text": "PathImportContentConverOptions",
              "canonicalReference": "@gby/convers!PathImportContentConverOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ContentConver",
              "canonicalReference": "file-conver!ContentConver:type"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/js-conver.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createPathImportContentConver"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gby/convers!GetJsImportInfo:type",
          "docComment": "/**\n * 获取js 导入信息的回调函数类型\n *\n * @param matchingString - 正则匹配的完整字符串\n *\n * @param subString - 正则捕获的子字符串\n *\n * @returns 返回导入所需求的信息\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetJsImportInfo = "
            },
            {
              "kind": "Content",
              "text": "(matchingString: string, ...subString: any[]) => "
            },
            {
              "kind": "Reference",
              "text": "JsImportInfo",
              "canonicalReference": "@gby/convers!JsImportInfo:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/js-conver.d.ts",
          "releaseTag": "Public",
          "name": "GetJsImportInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gby/convers!JsImportInfo:interface",
          "docComment": "/**\n * js资源导入信息\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsImportInfo "
            }
          ],
          "fileUrlPath": "dist/js-conver.d.ts",
          "releaseTag": "Public",
          "name": "JsImportInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!JsImportInfo#name:member",
              "docComment": "/**\n * 导入的模块名字\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!JsImportInfo#path:member",
              "docComment": "/**\n * 导入的路径\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gby/convers!MemberExportContentConverOptions:interface",
          "docComment": "/**\n * createMemberExportContentConver 的选项\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MemberExportContentConverOptions "
            }
          ],
          "fileUrlPath": "dist/js-conver.d.ts",
          "releaseTag": "Public",
          "name": "MemberExportContentConverOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!MemberExportContentConverOptions#name:member",
              "docComment": "/**\n * 所要查找（即：需要被替换的）对象的名字\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!MemberExportContentConverOptions#onConver:member",
              "docComment": "/**\n * 当发生转换时的回调函数\n *\n * @remarks\n *\n * 防止和已有的变量重名\n *\n * @param fileInfo - 被转换的文件的信息\n *\n * @param members - 最终生成的导出的成员列表\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onConver?: "
                },
                {
                  "kind": "Content",
                  "text": "(fileInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "FileInfo",
                  "canonicalReference": "file-conver!FileInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ", members: string[]) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onConver",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!MemberExportContentConverOptions#prefix:member",
              "docComment": "/**\n * 为导出成员生成的蹭变量名的前缀\n *\n * @remarks\n *\n * 防止和已有的变量重名\n *\n * @defaultValue\n *\n * \"export_\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!MemberExportContentConverOptions#suffix:member",
              "docComment": "/**\n * 为导出成员生成的蹭变量名的后缀\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suffix?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "suffix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gby/convers!MemberImportContentConverOptions:interface",
          "docComment": "/**\n * createMemberImportContentConver 的选项\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MemberImportContentConverOptions "
            }
          ],
          "fileUrlPath": "dist/js-conver.d.ts",
          "releaseTag": "Public",
          "name": "MemberImportContentConverOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!MemberImportContentConverOptions#name:member",
              "docComment": "/**\n * 模块名字\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!MemberImportContentConverOptions#onConver:member",
              "docComment": "/**\n * 当发生转换时的回调函数\n *\n * @param fileInfo - 被转换的文件的信息\n *\n * @param members - 最终生成的导出的成员列表\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onConver?: "
                },
                {
                  "kind": "Content",
                  "text": "(fileInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "FileInfo",
                  "canonicalReference": "file-conver!FileInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ", members: string[]) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onConver",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!MemberImportContentConverOptions#path:member",
              "docComment": "/**\n * 模块的导入路径\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!MemberImportContentConverOptions#type:member",
              "docComment": "/**\n * 是否仅作为类型导入，即 `import type {...} from \"...\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gby/convers!PathImportContentConverOptions:interface",
          "docComment": "/**\n * createPathImportContentConver 的选项\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PathImportContentConverOptions "
            }
          ],
          "fileUrlPath": "dist/js-conver.d.ts",
          "releaseTag": "Public",
          "name": "PathImportContentConverOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!PathImportContentConverOptions#defaultExport:member",
              "docComment": "/**\n * 是否只导入默认导出项\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultExport?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultExport",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!PathImportContentConverOptions#getImportInfo:member",
              "docComment": "/**\n * 获取 js 导入语句的信息\n *\n * @remarks\n *\n * 会传入与 pathRE 所匹配的字符串\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getImportInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "GetJsImportInfo",
                  "canonicalReference": "@gby/convers!GetJsImportInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getImportInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!PathImportContentConverOptions#onConver:member",
              "docComment": "/**\n * 当发生转换时的回调函数\n *\n * @remarks\n *\n * 防止和已有的变量重名\n *\n * @param fileInfo - 被转换的文件的信息\n *\n * @param members - 最终生成的导出的成员列表\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onConver?: "
                },
                {
                  "kind": "Content",
                  "text": "(fileInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "FileInfo",
                  "canonicalReference": "file-conver!FileInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ", pathNameMap: {\n        [Path: string]: string;\n    }) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onConver",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!PathImportContentConverOptions#path:member",
              "docComment": "/**\n * 查找路径时使用的正则 或 字符串\n *\n * @remarks\n *\n * 当是正则对象时，正则必须带有全局 global 标志，即：`g`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Reference",
                  "text": "RegExp",
                  "canonicalReference": "!RegExp:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!PathImportContentConverOptions#prefix:member",
              "docComment": "/**\n * 导入变量名的前缀\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gby/convers!PathImportContentConverOptions#suffix:member",
              "docComment": "/**\n * 导入变量名的后缀\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suffix?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "suffix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
